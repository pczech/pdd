<?php

/**
 * @file
 * Play with the Form API.
 */

/**
 * Implements hook_menu().
 */
function formex_menu() {
  $items = array();

  $items['formex'] = array(
    'title' => 'View the sample form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('formex_nameform'),
    'access callback' => TRUE,
  );

  return $items;
}


/**
 * Creates form 'nameform'.
 */
function formex_nameform($form, &$form_state) {
  _formex_trace(__FUNCTION__);
  // dpm($form);
  // dpm($form_state);

  $form['name'] = array(
    '#type' => 'fieldset',
    '#title' => t('Your name'),
    '#description' => t('What people call you.'),
  );

  $form['name']['user_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Your name'),
    '#description' => t('Please enter your name.'),
  );

  $form['color'] = array(
    '#prefix' => '<hr>',
    '#type' => 'fieldset',
    '#title' => t('Color'),
    '#description' => t('This fieldset contains Color field.'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#suffix' => '<div class="privacy-warning">' .
      t('This information will be displayed publicly!') . '</div>',
  );

  $form['color_options'] = array(
    '#type' => 'value',
    '#value' => array(t('red'), t('green'), t('blue')),
  );

  $form['color']['favorite_color'] = array(
    '#type' => 'select',
    '#title' => t('Favorite Color'),
    '#description' => t('Please select your favorite color.'),
    '#options' => $form['color_options']['#value'],
  );

  $form['name_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}


/**
 * Form validation function FORM_ID_validate.
 */
function formex_nameform_validate($form, &$form_state) {
  _formex_trace(__FUNCTION__);
  // dpm($form);
  // dpm($form_state);

  if ($form_state['values']['user_name'] == 'King Kong') {
    // We notify the form API that this field has failed validation.
    form_set_error('user_name',
      t('King Kong is not allowed to use this form.'));
  }
}


/**
 * Form submision function FORM_ID_submit.
 *
 * Warning. The form processor flattens the form values, so the following
 * access is valid:
 * $form[values]['user_name'] (and not $form['values']['color']['user_name'])
 * $form['values']['favorite_color']
 */
function formex_nameform_submit($form, &$form_state) {
  _formex_trace(__FUNCTION__);
  dpm($form);
  dpm($form_state);

  $name = $form_state['values']['user_name'];
  $color_key = $form_state['values']['favorite_color'];
  $color = $form_state['values']['color_options'][$color_key];
  drupal_set_message(t('%name loves the color %color!',
    array('%name' => $name, '%color' => $color)));
}


/**
 * Implements hook_theme().
 *
 * The hook is called on cache clear.
 */
function formex_theme($existing, $type, $theme, $path) {
  _formex_trace(__FUNCTION__);
  return array(
    'formex_nameform' => array(
      'render element' => 'form_dupa',
      'template' => 'formex-nameform',
    )
  );
}


/**
* Assign the elements of the form to variables so the themer can use those
* values to control how the form elements are displayed, or alternatively
* displaying the whole form as constructed above.
*
* The template_preprocess_HOOK function is called before the template file is
* invoked. HOOK is theme hook name defined in hook_theme. Drupal calls
* automatically theme_FORM_ID function for theming, the theme function named
* differently shall be indicated by #theme parameter in the form. So, if HOOK
* name is the same like FORM_ID name, then the theme function (thus this
* preprocess function too) is called automatically.
*/
function template_preprocess_formex_nameform(&$variables) {
  _formex_trace(__FUNCTION__);
  dpm($variables);
}


/**
 * Traces module functions' calls.
 */
function _formex_trace($mark) {
  dpm($mark);
}
