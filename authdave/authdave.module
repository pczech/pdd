<?php

/**
 * @file
 * Use this module to learn about Drupal's menu system.
 */

/**
 * Implements hook_form_alter().
 */
function authdave_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id <> 'user_login' && $form_id <> 'user_login_block') {
    return;
  }

  $form['#validate'][] = 'authdave_user_form_validate';

  // dpm($form);
  // dpm($form_state);
  // dpm($form_id);
}


/**
 * Custom form validation function.
 */
function authdave_user_form_validate($form, &$form_state) {
  // dpm($form);
  // dpm($form_state);

  if (!authdave_authenticate($form_state)) {
    form_set_error('name', t('authdave: unrecognized username.'));
  }
}


/**
 * Custom user authentication function.
 */
function authdave_authenticate(&$form_state) {
  // Get the first four characters of the users name.
  $username = $form_state['input']['name'];
  $testname = drupal_substr(drupal_strtolower($username), 0, 4);

  // Check to see if the person is a dave.
  if ($testname == "dave") {
    // If it’s a dave then use the external_login_register function
    // to either log the person in or create a new account if that
    // person doesn’t exist as a Drupal user.
    user_external_login_register($username, 'authdave');
    return TRUE;
  }

  return TRUE; //FALSE;
}


/**
 * Implements hook_user_insert().
 */
function authdave_user_insert(&$edit, $account, $category) {
  // dpm($edit);
  // dpm($account);
  // dpm($category);

  authdave_account($account);
}

/**
 * Checks if the account has been created by authdave module.
 *
 * hook_user_insert is called before the inserted user entry is stored
 * in authmap table, so this will not work.
 */
function authdave_account(&$account) {
  $result = db_query("SELECT uid FROM {authmap} WHERE uid = :uid AND module = 'authdave'",
    array(':uid' => $account->uid))
    ->fetchField();

  dpm($result);

  return isset($result);
}
